// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Employee.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Protos/Employee.proto</summary>
public static partial class EmployeeReflection {

  #region Descriptor
  /// <summary>File descriptor for Protos/Employee.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static EmployeeReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChVQcm90b3MvRW1wbG95ZWUucHJvdG8idQoIRW1wbG95ZWUSEQoJRmlyc3RO",
          "YW1lGAEgASgJEhAKCExhc3ROYW1lGAIgASgJEhQKDEZvb3RiYWxsQ2x1YhgD",
          "IAEoCRIQCghQb3NpdGlvbhgEIAEoCRIPCgdDb3VudHJ5GAUgASgJEgsKA0Fn",
          "ZRgGIAEoBSIyChJFbXBsb3llZUNvbGxlY3Rpb24SHAoJRW1wbG95ZWVzGAEg",
          "AygLMgkuRW1wbG95ZWViBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Employee), global::Employee.Parser, new[]{ "FirstName", "LastName", "FootballClub", "Position", "Country", "Age" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EmployeeCollection), global::EmployeeCollection.Parser, new[]{ "Employees" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Employee : pb::IMessage<Employee> {
  private static readonly pb::MessageParser<Employee> _parser = new pb::MessageParser<Employee>(() => new Employee());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Employee> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EmployeeReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Employee() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Employee(Employee other) : this() {
    firstName_ = other.firstName_;
    lastName_ = other.lastName_;
    footballClub_ = other.footballClub_;
    position_ = other.position_;
    country_ = other.country_;
    age_ = other.age_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Employee Clone() {
    return new Employee(this);
  }

  /// <summary>Field number for the "FirstName" field.</summary>
  public const int FirstNameFieldNumber = 1;
  private string firstName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FirstName {
    get { return firstName_; }
    set {
      firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "LastName" field.</summary>
  public const int LastNameFieldNumber = 2;
  private string lastName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LastName {
    get { return lastName_; }
    set {
      lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "FootballClub" field.</summary>
  public const int FootballClubFieldNumber = 3;
  private string footballClub_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FootballClub {
    get { return footballClub_; }
    set {
      footballClub_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Position" field.</summary>
  public const int PositionFieldNumber = 4;
  private string position_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Position {
    get { return position_; }
    set {
      position_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Country" field.</summary>
  public const int CountryFieldNumber = 5;
  private string country_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Country {
    get { return country_; }
    set {
      country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Age" field.</summary>
  public const int AgeFieldNumber = 6;
  private int age_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Age {
    get { return age_; }
    set {
      age_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Employee);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Employee other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FirstName != other.FirstName) return false;
    if (LastName != other.LastName) return false;
    if (FootballClub != other.FootballClub) return false;
    if (Position != other.Position) return false;
    if (Country != other.Country) return false;
    if (Age != other.Age) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
    if (LastName.Length != 0) hash ^= LastName.GetHashCode();
    if (FootballClub.Length != 0) hash ^= FootballClub.GetHashCode();
    if (Position.Length != 0) hash ^= Position.GetHashCode();
    if (Country.Length != 0) hash ^= Country.GetHashCode();
    if (Age != 0) hash ^= Age.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FirstName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(FirstName);
    }
    if (LastName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(LastName);
    }
    if (FootballClub.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(FootballClub);
    }
    if (Position.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Position);
    }
    if (Country.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Country);
    }
    if (Age != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Age);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FirstName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
    }
    if (LastName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
    }
    if (FootballClub.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FootballClub);
    }
    if (Position.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Position);
    }
    if (Country.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
    }
    if (Age != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Employee other) {
    if (other == null) {
      return;
    }
    if (other.FirstName.Length != 0) {
      FirstName = other.FirstName;
    }
    if (other.LastName.Length != 0) {
      LastName = other.LastName;
    }
    if (other.FootballClub.Length != 0) {
      FootballClub = other.FootballClub;
    }
    if (other.Position.Length != 0) {
      Position = other.Position;
    }
    if (other.Country.Length != 0) {
      Country = other.Country;
    }
    if (other.Age != 0) {
      Age = other.Age;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          FirstName = input.ReadString();
          break;
        }
        case 18: {
          LastName = input.ReadString();
          break;
        }
        case 26: {
          FootballClub = input.ReadString();
          break;
        }
        case 34: {
          Position = input.ReadString();
          break;
        }
        case 42: {
          Country = input.ReadString();
          break;
        }
        case 48: {
          Age = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class EmployeeCollection : pb::IMessage<EmployeeCollection> {
  private static readonly pb::MessageParser<EmployeeCollection> _parser = new pb::MessageParser<EmployeeCollection>(() => new EmployeeCollection());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EmployeeCollection> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EmployeeReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmployeeCollection() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmployeeCollection(EmployeeCollection other) : this() {
    employees_ = other.employees_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EmployeeCollection Clone() {
    return new EmployeeCollection(this);
  }

  /// <summary>Field number for the "Employees" field.</summary>
  public const int EmployeesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Employee> _repeated_employees_codec
      = pb::FieldCodec.ForMessage(10, global::Employee.Parser);
  private readonly pbc::RepeatedField<global::Employee> employees_ = new pbc::RepeatedField<global::Employee>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Employee> Employees {
    get { return employees_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EmployeeCollection);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EmployeeCollection other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!employees_.Equals(other.employees_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= employees_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    employees_.WriteTo(output, _repeated_employees_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += employees_.CalculateSize(_repeated_employees_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EmployeeCollection other) {
    if (other == null) {
      return;
    }
    employees_.Add(other.employees_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          employees_.AddEntriesFrom(input, _repeated_employees_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
